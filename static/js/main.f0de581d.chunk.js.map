{"version":3,"sources":["navigation.js","components/Header/index.js","components/Header/Header.js","constants.js","containers/Homepage/Homepage.js","state/ducks/books/action.js","state/ducks/books/types.js","containers/Homepage/index.js","containers/AddBook/AddBook.js","routes.js","containers/BookDetail/BookDetail.js","components/Main/Main.js","components/Main/index.js","components/MainLayout/index.js","components/MainLayout/MainLayout.js","components/AddBook/AddBookForm.js","components/AddBook/index.js","components/Homepage/BookStyles.js","components/Homepage/Book.js","components/Homepage/Books.js","components/Homepage/FilterSortBarStyles.js","components/Homepage/FilterSortBar.js","App.js","serviceWorker.js","state/ducks/books/reducers.js","state/ducks/books/index.js","state/store.js","history.js","index.js"],"names":["navigation","left","title","to","right","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","className","map","nav","NavItem","NavLink","NavbarText","categories","ratings","statuses","apiHost","Homepage","props","state","activePage","view","this","getBooks","loading","allBooks","books","filteredBooks","filter","book","category","searchTerm","toLowerCase","indexOf","author","sortedBooks","sortTerm","sort","book1","book2","console","log","parseInt","length","items","slice","PaginationArray","Array","Math","ceil","fill","Container","ButtonGroup","Button","setState","Pagination","aria-label","PaginationItem","disabled","PaginationLink","previous","href","e","preventDefault","page","index","pageNum","active","next","React","Component","mapDispatchToProps","dispatch","type","axios","get","then","result","payload","data","catch","err","connect","AddBook","id","routerProps","match","params","isEdit","componentProps","Row","Col","xs","routes","path","exact","component","Main","route","Comp","MainLayout","document","Children","children","validationSchema","Yup","shape","required","review","min","addBook","values","history","post","push","editBook","put","AddBookForm","withRouter","initialValues","description","rating","imageUrl","status","onSubmit","enableReinitialize","errors","handleChange","touched","handleSubmit","handleBlur","isSubmitting","Form","FormGroup","Label","for","Input","name","placeholder","value","onChange","invalid","FormFeedback","score","StyledBookCard","styled","Card","Book","CardImg","top","width","src","alt","CardBody","CardText","CardLink","Books","item","StyledNavbarText","StyledInputGroup","InputGroup","changeFilter","search","activeFilter","fluid","style","padding","InputGroupAddon","addonType","InputGroupText","target","App","Boolean","window","location","hostname","initialState","reducer","action","rootReducer","combineReducers","reducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","createBrowserHistory","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f0de581d.chunk.js","sourcesContent":["const navigation = {\n  left: [\n    {\n      title: \"HomePage\",\n      to: \"/\",\n    },\n    {\n      title: \"Read Books\",\n      to: \"/read-books\",\n    },\n  ],\n  right: [\n    {\n      title: \"+ Add Book\",\n      to: \"/add-book\",\n    },\n  ],\n};\n\nexport default navigation;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./styles\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n} from \"reactstrap\";\nimport navigation from \"../../navigation\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">\n          BookShelf App\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            {navigation.left.map((nav) => {\n              return (\n                <NavItem>\n                  <NavLink tag={Link} to={nav.to}>\n                    {nav.title}\n                  </NavLink>\n                </NavItem>\n              );\n            })}\n          </Nav>\n          {navigation.right.map((nav) => {\n            return (\n              <NavbarText>\n                <NavLink tag={Link} to={nav.to}>\n                  {nav.title}\n                </NavLink>\n              </NavbarText>\n            );\n          })}\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","export const categories = [\"JavaScript\", \"HTML\", \"CSS\", \"Python\", \"JAVA\"];\nexport const ratings = [1, 2, 3, 4, 5];\nexport const statuses = [\"Not read\", \"Read\"];\nexport const apiHost = \"https://5eb6ac52875f1a00167e0faf.mockapi.io\";\nexport const itemsPerPage = 4;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Books, FilterSortBar} from \"../../components\";\nimport {getBooks} from \"../../state/ducks/books/action\";\nimport {Container,  Pagination, PaginationItem, PaginationLink, Button, ButtonGroup} from \"reactstrap\";\nimport {itemsPerPage} from \"../../constants\";\n\nclass Homepage extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      activePage: 1,\n      view: \"cards\"\n    }\n  }\n\n  componentDidMount() {\n      this.props.getBooks();\n  }\n\n  render(){\n    if(this.props.loading){\n      return <h1>BOOKS ARE LOADING...</h1>\n    }\n    const allBooks = this.props.books;\n    let filteredBooks = [];\n    /// Categorye gore filter\n    if(this.props.filter){\n      filteredBooks = allBooks.filter((book) => {\n        return book.category === this.props.filter\n      })\n    }else{\n      filteredBooks = allBooks;\n    }\n\n    /// Searchteme gore filter\n    if(this.props.searchTerm){\n      filteredBooks = filteredBooks.filter((book) => {\n        return book.title.toLowerCase().indexOf(this.props.searchTerm.toLowerCase()) > -1 || book.author.toLowerCase().indexOf(this.props.searchTerm.toLowerCase()) > -1\n      })\n    }\n\n    // Sorting\n    let sortedBooks = [];\n    if(this.props.sortTerm){\n      sortedBooks = [...filteredBooks].sort((book1, book2) => {\n         console.log(book1, book2, this.props.sortTerm);\n          return parseInt(book2[this.props.sortTerm]) - parseInt(book1[this.props.sortTerm])\n      });\n    }else{\n      sortedBooks = filteredBooks;\n    }\n\n\n    let books = \"\";\n    if(sortedBooks.length < 1){\n      books = <h2>NO BOOKS HERE</h2>\n    }else{\n      // 1 - 0,4\n      // 2 - 4,8\n      // 3 - 8,12\n      books = <Books view={this.state.view} items={sortedBooks.slice(itemsPerPage * (this.state.activePage - 1),itemsPerPage * this.state.activePage)}/>;\n    }\n    const PaginationArray = new Array(Math.ceil(sortedBooks.length/ itemsPerPage));\n    PaginationArray.fill(null);\n    return <div>\n      <FilterSortBar />\n      <Container>\n        <div>\n          <h5>Views</h5>\n          <ButtonGroup>\n            <Button color=\"primary\" onClick={() => this.setState({view: \"cards\"})}>Cards View</Button>\n            <Button color=\"primary\" onClick={() => this.setState({view: \"list\"})}>List View</Button>\n          </ButtonGroup>\n        </div>\n        <div className=\"books-holder\">\n          {books}\n        </div>\n\n        <Pagination aria-label=\"Page navigation example\">\n          <PaginationItem disabled={this.state.activePage === 1}>\n            <PaginationLink previous href=\"#\" onClick={(e) => {\n              e.preventDefault();\n              this.setState({\n                activePage: this.state.activePage -1\n              })\n            }}/>\n          </PaginationItem>\n          {\n            PaginationArray.map((page, index) => {\n                const pageNum = index + 1;\n                return <PaginationItem active={pageNum === this.state.activePage}>\n                  <PaginationLink href=\"#\" onClick={(e) => {\n                    e.preventDefault();\n                    this.setState({activePage: pageNum});\n                  }}>\n                    {pageNum}\n                  </PaginationLink>\n                </PaginationItem>\n            })\n          }\n          <PaginationItem disabled={this.state.activePage === PaginationArray.length}>\n            <PaginationLink next href=\"#\" onClick={(e) => {\n              e.preventDefault();\n              this.setState({\n                activePage: this.state.activePage + 1\n              })\n            }}/>\n          </PaginationItem>\n        </Pagination>\n      </Container>\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books.data,\n    loading: state.books.loading,\n    filter: state.books.filter,\n    searchTerm: state.books.searchTerm,\n    sortTerm: state.books.sortTerm\n  }\n};\n\nconst mapDispatchToProps = {\n  getBooks\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\n","import * as Actions from \"./types\";\nimport axios from \"axios\";\nimport {apiHost} from \"../../../constants\";\n\n\nexport const addBook = (values, history) => {\n    return dispatch => {\n        axios.post(`${apiHost}/books`, values).then((result) => {\n            dispatch({type: Actions.ADD_BOOK, payload: result.data})\n            history.push(\"/\");\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n};\n\nexport const getBooks = () => {\n    return dispatch => {\n        dispatch({type: Actions.LOAD_BOOKS});\n        axios.get(`${apiHost}/books`).then((result) => {\n            dispatch({type: Actions.SET_BOOKS, payload: result.data})\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n};\n\nexport const setFilter = (filter) => {\n    return dispatch => {\n        dispatch({type: Actions.SET_FILTER, payload: filter})\n    }\n};\n\nexport const searchBooks = (searchTerm) => {\n    return dispatch => {\n        dispatch({type: Actions.SEARCH_BOOKS, payload: searchTerm});\n    }\n};\n\nexport const sortBooks = (sortTerm) => {\n    return dispatch => {\n        dispatch({type: Actions.SORT_BOOKS, payload: sortTerm});\n    }\n};\n\nexport const editBook = (id, values, history) => {\n    return dispatch => {\n        axios.put(`${apiHost}/books/${id}`, values).then((result) => {\n            console.log(result.data);\n            dispatch({type:Actions.EDIT_BOOK, payload: result.data})\n            //history.push(\"/\");\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n};","const SET_BOOKS = \"SET_BOOKS\";\nconst GET_BOOKS = \"GET_BOOKS\";\nconst ADD_BOOK  = \"ADD_BOOK\";\nconst LOAD_BOOKS = \"LOAD_BOOKS\";\nconst SET_FILTER = \"SET_FILTER\";\nconst SEARCH_BOOKS = \"SEARCH_BOOKS\";\nconst SORT_BOOKS = \"SORT_BOOKS\"\nconst EDIT_BOOK = \"EDIT_BOOK\";\n\nexport {SET_BOOKS, GET_BOOKS, ADD_BOOK, LOAD_BOOKS, SET_FILTER, SEARCH_BOOKS, SORT_BOOKS, EDIT_BOOK}","import Homepage from \"./Homepage\";\n\nexport default Homepage;\n","import React from \"react\";\nimport { AddBookForm } from \"../../components\";\nimport { Row, Col } from \"reactstrap\";\nimport axios from \"axios\";\nimport {apiHost} from \"../../constants\";\n\nclass AddBook extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            book: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const id = this.props.routerProps.match.params.id;\n        if(id){\n            axios.get(`${apiHost}/books/${id}`).then((result) => {\n                this.setState({\n                    book: result.data\n                })\n            });\n        }\n    }\n\n    render(){\n        const isEdit = this.props.componentProps.isEdit;\n        const id = this.props.routerProps.match.params.id;\n        return (\n            <Row>\n                <Col xs={12}>\n                    {\n                        isEdit ? <h3>Edit book</h3>: <h3>Add a new book</h3>\n                    }\n                </Col>\n                <Col xs={12}>\n                    <AddBookForm isEdit={isEdit} book={this.state.book}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default AddBook;\n","import React from \"react\";\nimport { Homepage, AddBook, BookDetail } from \"./containers\";\n\nconst routes = [\n  {\n    title: \"Home Page\",\n    path: \"/\",\n    exact: true,\n    componentProps: {\n    },\n    component: Homepage,\n  },\n  {\n    title: \"Add Book\",\n    path: \"/add-book\",\n    exact: false,\n    componentProps: {\n    },\n    component: AddBook,\n  },\n  {\n    title: \"Edit Book\",\n    path: \"/edit-book/:id\",\n    exact: false,\n    componentProps: {\n      isEdit: true\n    },\n    component: AddBook\n  },\n  {\n    title: \"Book Detail\",\n    path: \"/book-detail/:id\",\n    exact: false,\n    componentProps: {},\n    component: BookDetail\n  },\n];\n\nexport default routes;\n","import React from 'react';\n\nconst BookDetail = () => {\n    return (\n        <div>\n            Book Details\n        </div>\n    );\n};\n\nexport default BookDetail;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { MainLayout } from \"../../components\";\n\nconst Main = () => {\n  return (\n    <div>\n      <Switch>\n        {routes.map((route) => {\n          return (\n            <Route\n              path={route.path}\n              exact={route.exact}\n              component={(props) => {\n                const Comp = route.component;\n                return <MainLayout title={route.title} routerProps={props} componentProps={route.componentProps}>{Comp}</MainLayout>;\n              }}\n            />\n          );\n        })}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import Main from \"./Main\";\nimport \"./styles.js\";\n\nexport default Main;\n","import MainLayout from \"./MainLayout\";\n\nexport default MainLayout;\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\n\nclass MainLayout extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const title = this.props.title;\n    document.title = title;\n  }\n\n  render() {\n    console.log(this.props);\n    const Children = this.props.children;\n    return (\n      <div>\n        <Children routerProps={this.props.routerProps} componentProps={this.props.componentProps}/>\n      </div>\n    );\n  }\n}\n\nexport default MainLayout;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { Button, Form, FormGroup, Label, Input, FormText, FormFeedback } from \"reactstrap\";\nimport { Formik } from \"formik\";\nimport {categories, ratings, statuses} from \"../../constants\";\nimport {addBook, editBook} from \"../../state/ducks/books/action\";\nimport * as Yup from \"yup\";\nimport {withRouter} from \"react-router\";\n\n\nconst validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is a required field\"),\n    author: Yup.string().required(\"Author is a required field\"),\n    review: Yup.string().min(30, \"30 karakterden az giremezsiniz\")\n});\n\nconst AddBookForm = (props) => {\n    console.log(props);\n    let initialValues = {\n        title: \"\",\n        author: \"\",\n        category: \"JavaScript\",\n        description: \"\",\n        rating: \"5\",\n        imageUrl: \"\",\n        status: \"Not Read\",\n        review: \"\"\n    };\n    if(props.isEdit && props.book){\n        /// review var mi - Object.keys().indexOf(\"review\") > -1\n        initialValues = {...props.book};\n    }\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values) => {\n            console.log(values);\n            if(props.isEdit){\n                props.editBook(props.book.id, values, props.history);\n            }else{\n                props.addBook(values, props.history);\n            }\n        }}\n        enableReinitialize={true}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                placeholder=\"Name of the book\"\n                value={values.title}\n                onChange={handleChange}\n                invalid={errors.title}\n              />\n                {\n                    errors.title && <FormFeedback>{errors.title}</FormFeedback>\n                }\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"author\">Author</Label>\n              <Input\n                type=\"text\"\n                name=\"author\"\n                id=\"author\"\n                placeholder=\"Author of the book\"\n                value={values.author}\n                onChange={handleChange}\n                invalid={errors.author}\n              />\n                {\n                    errors.author && <FormFeedback>{errors.author}</FormFeedback>\n                }\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"imageUrl\">Image URL</Label>\n              <Input\n                type=\"text\"\n                name=\"imageUrl\"\n                id=\"imageUrl\"\n                placeholder=\"Image of the book\"\n                value={values.imageUrl}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleSelect\">Category</Label>\n              <Input type=\"select\" name=\"category\" id=\"category\" value={values.category} onChange={handleChange}>\n                {categories.map((category) => {\n                  return <option>{category}</option>;\n                })}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleText\">Description</Label>\n              <Input type=\"textarea\" name=\"description\" id=\"description\" value={values.description}\n                     onChange={handleChange}/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleSelect\">Rating</Label>\n              <Input type=\"select\" name=\"rating\" id=\"rating\" value={values.rating} onChange={handleChange}>\n                {ratings.map((score) => {\n                  return <option>{score}</option>;\n                })}\n              </Input>\n            </FormGroup>\n              <FormGroup>\n                  <Label for=\"exampleSelect\">Status</Label>\n                  <Input type=\"select\" name=\"status\" id=\"status\" value={values.status} onChange={handleChange}>\n                      {statuses.map((status) => {\n                          return <option>{status}</option>;\n                      })}\n                  </Input>\n              </FormGroup>\n              <FormGroup>\n                  <Label for=\"review\">Review</Label>\n                  <Input type=\"textarea\" name=\"review\" id=\"review\" value={values.review} onChange={handleChange} invalid={errors.review}/>\n                  {\n                      errors.review && <FormFeedback>{errors.review}</FormFeedback>\n                  }\n              </FormGroup>\n              {\n                  props.isEdit ?\n                      <Button color=\"primary\">Save</Button> : <Button color=\"primary\">Add</Button>\n              }\n\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n    addBook: addBook,\n    editBook: editBook\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(AddBookForm));\n","import AddBookForm from \"./AddBookForm\";\n\nexport default AddBookForm;\n","import styled from \"styled-components\";\nimport {Card} from \"reactstrap\";\n\nexport const StyledBookCard = styled(Card)`\n        height: 444px;\n        .card-img-top {\n            height: 250px;\n        }\n`;","import React from 'react';\nimport {Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, CardLink } from \"reactstrap\";\nimport {StyledBookCard} from \"./BookStyles\";\nimport {Link} from \"react-router-dom\";\n\nconst Book = (props) => {\n    const {imageUrl, rating, title, id} = props;\n    return (\n            <StyledBookCard>\n                <CardImg top width=\"100%\" src={imageUrl} alt={title} />\n                <CardBody>\n                    <CardText>\n                        <strong>{`${rating} / 5`}</strong>\n                    </CardText>\n                    <CardText>\n                        {title}\n                    </CardText>\n                    <CardLink>\n                        Details\n                    </CardLink>\n                    <CardLink>\n                        <Link to={`/edit-book/${id}`}>Edit Book</Link>\n                    </CardLink>\n                </CardBody>\n            </StyledBookCard>\n    );\n};\n\nexport default Book;","import React from 'react';\nimport Book from \"./Book\";\nimport {Col, Row} from \"reactstrap\";\n\nconst Books = (props) => {\n    return (\n        <Row>\n            {\n                props.items.map((item) => {\n                    return <Col xs={props.view === \"cards\" ? 3 : 12}>\n                        <Book {...item} />\n                    </Col>\n                })\n            }\n        </Row>\n    );\n};\n\nexport default Books;","import styled from \"styled-components\";\nimport {NavbarText, InputGroup } from 'reactstrap';\n\nexport const StyledNavbarText = styled(NavbarText)`\n    margin-left: 15px;\n    color: ${props => props.active ? \"#FF8247\" : \"#035491\"};\n    cursor: pointer;\n`;\n\nexport const StyledInputGroup = styled(InputGroup)`\n    display: inline-flex;\n    width: 50%;\n`;","import React from 'react';\nimport { Nav, Container, Row, Col, InputGroup, InputGroupAddon, InputGroupText, Input} from 'reactstrap';\nimport {connect} from \"react-redux\";\nimport {StyledNavbarText, StyledInputGroup} from \"./FilterSortBarStyles\";\nimport {categories} from \"../../constants\";\nimport {setFilter, searchBooks, sortBooks} from \"../../state/ducks/books/action\";\n\nconst FilterSortBar = (props) => {\n    return (\n        <div>\n                <Container fluid className=\"bg-white\" style={{padding: \"15px\"}}>\n                    <Row>\n                        <Col xs={6}>\n                            <Nav className=\"bg-white\">\n                                <StyledNavbarText><strong>Categories:</strong></StyledNavbarText>\n                                <StyledNavbarText active={!props.activeFilter} onClick={() => {\n                                    props.changeFilter(\"\");\n                                }}>All</StyledNavbarText>\n                                {\n                                    categories.map((category) => {\n                                        return <StyledNavbarText active={props.activeFilter === category} onClick={() => {\n                                            props.changeFilter(category);\n                                        }}>{category}</StyledNavbarText>\n                                    })\n                                }\n                            </Nav>\n                        </Col>\n\n                        <Col xs={6}>\n                            <StyledInputGroup>\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>Search by name or author</InputGroupText>\n                                </InputGroupAddon>\n                                <Input onChange={(e) => {\n                                    //e.target.value\n                                    props.search(e.target.value)\n                                }}/>\n                            </StyledInputGroup>\n\n                            <StyledInputGroup>\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => {\n                                    props.sort(e.target.value);\n                                }}>\n                                    <option value=\"\">No Sort</option>\n                                    <option value=\"alphabetical\">Sort Alphabetical</option>\n                                    <option value=\"rating\">Sort by Rating</option>\n                                </Input>\n                            </StyledInputGroup>\n                        </Col>\n                    </Row>\n                </Container>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) =>{\n    return {\n        activeFilter: state.books.filter\n    }\n};\n\nconst mapDispatchToProps = {\n  changeFilter: setFilter,\n  search: searchBooks,\n  sort: sortBooks\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSortBar);","import React from \"react\";\nimport { Header, Main } from \"./components\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Actions from \"./types\"\n\nconst initialState = {\n    data: [],\n    loading: false,\n    filter: \"\",\n    searchTerm: \"\",\n    sortTerm: \"\"\n};\n\nconst booksReducer = (state=initialState, action) => {\n  switch (action.type) {\n      case Actions.ADD_BOOK:\n          return {\n              ...state,\n              data: [...state.data, action.payload]\n          };\n      case Actions.SET_BOOKS:\n          return {\n              ...state,\n              data: action.payload,\n              loading: false\n          }\n      case Actions.LOAD_BOOKS:\n          return {\n              ...state,\n              loading: true\n          };\n      case Actions.SET_FILTER:\n          return {\n              ...state,\n              filter: action.payload\n          };\n      case Actions.SEARCH_BOOKS:\n          return {\n              ...state,\n              searchTerm: action.payload\n          };\n      case Actions.SORT_BOOKS:\n          return {\n              ...state,\n              sortTerm: action.payload\n          };\n      case Actions.EDIT_BOOK:\n          return {\n            ...state,\n            data: state.data.map((book) => {\n                if(book.id === action.payload.id){\n                    return action.payload;\n                }else{\n                    return book;\n                }\n            })\n          };\n      default:\n          return state;\n  }\n};\n\nexport default booksReducer;","import reducer from \"./reducers\";\n\nexport default reducer;","import * as reducers from \"./ducks\";\nimport {combineReducers, createStore, compose, applyMiddleware} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst rootReducer = combineReducers(reducers);\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./state/store\";\nimport history from \"./history\";\n\nReactDOM.render(\n      <Provider store={store}>\n    <BrowserRouter history={history}>\n            <App />\n    </BrowserRouter>\n      </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}